// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SignInAppSrv.dbContext;

namespace SignInAppSrv.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SignInAppSrv.Models.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DayId");

                    b.Property<string>("Description");

                    b.Property<int>("GroupId");

                    b.Property<string>("Name");

                    b.Property<TimeSpan>("TimeFrom");

                    b.Property<TimeSpan>("TimeTo");

                    b.HasKey("Id");

                    b.HasIndex("DayId");

                    b.ToTable("Assignments");

                    b.HasData(
                        new { Id = 1, DayId = 1, Description = "200", GroupId = 1, Name = "Religia", TimeFrom = new TimeSpan(0, 8, 0, 0, 0), TimeTo = new TimeSpan(0, 8, 45, 0, 0) },
                        new { Id = 2, DayId = 1, Description = "155", GroupId = 1, Name = "Polski", TimeFrom = new TimeSpan(0, 8, 50, 0, 0), TimeTo = new TimeSpan(0, 9, 35, 0, 0) },
                        new { Id = 3, DayId = 1, Description = "254", GroupId = 1, Name = "Matematyka", TimeFrom = new TimeSpan(0, 9, 40, 0, 0), TimeTo = new TimeSpan(0, 10, 25, 0, 0) },
                        new { Id = 4, DayId = 1, Description = "205", GroupId = 1, Name = "Przyroda", TimeFrom = new TimeSpan(0, 10, 30, 0, 0), TimeTo = new TimeSpan(0, 11, 15, 0, 0) },
                        new { Id = 5, DayId = 2, Description = "200", GroupId = 1, Name = "W-F", TimeFrom = new TimeSpan(0, 8, 0, 0, 0), TimeTo = new TimeSpan(0, 8, 45, 0, 0) },
                        new { Id = 6, DayId = 2, Description = "155", GroupId = 1, Name = "Muzyka", TimeFrom = new TimeSpan(0, 8, 50, 0, 0), TimeTo = new TimeSpan(0, 9, 35, 0, 0) },
                        new { Id = 7, DayId = 2, Description = "254", GroupId = 1, Name = "Matematyka", TimeFrom = new TimeSpan(0, 9, 40, 0, 0), TimeTo = new TimeSpan(0, 10, 25, 0, 0) },
                        new { Id = 8, DayId = 2, Description = "205", GroupId = 1, Name = "Biologia", TimeFrom = new TimeSpan(0, 10, 30, 0, 0), TimeTo = new TimeSpan(0, 11, 15, 0, 0) },
                        new { Id = 9, DayId = 2, Description = "205", GroupId = 1, Name = "Polski", TimeFrom = new TimeSpan(0, 11, 20, 0, 0), TimeTo = new TimeSpan(0, 12, 5, 0, 0) },
                        new { Id = 10, DayId = 3, Description = "200", GroupId = 1, Name = "W-F", TimeFrom = new TimeSpan(0, 8, 0, 0, 0), TimeTo = new TimeSpan(0, 8, 45, 0, 0) },
                        new { Id = 12, DayId = 3, Description = "155", GroupId = 1, Name = "Chemia", TimeFrom = new TimeSpan(0, 8, 50, 0, 0), TimeTo = new TimeSpan(0, 9, 35, 0, 0) },
                        new { Id = 13, DayId = 3, Description = "254", GroupId = 1, Name = "Matematyka", TimeFrom = new TimeSpan(0, 9, 40, 0, 0), TimeTo = new TimeSpan(0, 10, 25, 0, 0) },
                        new { Id = 14, DayId = 3, Description = "205", GroupId = 1, Name = "Matematyka", TimeFrom = new TimeSpan(0, 10, 30, 0, 0), TimeTo = new TimeSpan(0, 11, 15, 0, 0) },
                        new { Id = 15, DayId = 3, Description = "205", GroupId = 1, Name = "WDŻ", TimeFrom = new TimeSpan(0, 11, 20, 0, 0), TimeTo = new TimeSpan(0, 12, 5, 0, 0) },
                        new { Id = 16, DayId = 4, Description = "200", GroupId = 1, Name = "Polski", TimeFrom = new TimeSpan(0, 8, 0, 0, 0), TimeTo = new TimeSpan(0, 8, 45, 0, 0) },
                        new { Id = 17, DayId = 4, Description = "155", GroupId = 1, Name = "Historia", TimeFrom = new TimeSpan(0, 8, 50, 0, 0), TimeTo = new TimeSpan(0, 9, 35, 0, 0) },
                        new { Id = 18, DayId = 4, Description = "254", GroupId = 1, Name = "WOS", TimeFrom = new TimeSpan(0, 9, 40, 0, 0), TimeTo = new TimeSpan(0, 10, 25, 0, 0) },
                        new { Id = 19, DayId = 4, Description = "205", GroupId = 1, Name = "W-F", TimeFrom = new TimeSpan(0, 10, 30, 0, 0), TimeTo = new TimeSpan(0, 11, 15, 0, 0) },
                        new { Id = 20, DayId = 5, Description = "200", GroupId = 1, Name = "Religia", TimeFrom = new TimeSpan(0, 8, 0, 0, 0), TimeTo = new TimeSpan(0, 8, 45, 0, 0) },
                        new { Id = 21, DayId = 5, Description = "155", GroupId = 1, Name = "Chemia", TimeFrom = new TimeSpan(0, 8, 50, 0, 0), TimeTo = new TimeSpan(0, 9, 35, 0, 0) },
                        new { Id = 22, DayId = 5, Description = "254", GroupId = 1, Name = "Polski", TimeFrom = new TimeSpan(0, 9, 40, 0, 0), TimeTo = new TimeSpan(0, 10, 25, 0, 0) },
                        new { Id = 23, DayId = 5, Description = "205", GroupId = 1, Name = "Przyroda", TimeFrom = new TimeSpan(0, 10, 30, 0, 0), TimeTo = new TimeSpan(0, 11, 15, 0, 0) },
                        new { Id = 24, DayId = 5, Description = "205", GroupId = 1, Name = "WOS", TimeFrom = new TimeSpan(0, 11, 20, 0, 0), TimeTo = new TimeSpan(0, 12, 5, 0, 0) },
                        new { Id = 25, DayId = 5, Description = "205", GroupId = 1, Name = "Angielski", TimeFrom = new TimeSpan(0, 12, 10, 0, 0), TimeTo = new TimeSpan(0, 12, 55, 0, 0) }
                    );
                });

            modelBuilder.Entity("SignInAppSrv.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Identifier");

                    b.Property<string>("Name");

                    b.Property<int>("creatorId");

                    b.Property<DateTime>("modifyTime");

                    b.HasKey("Id");

                    b.ToTable("Groups");

                    b.HasData(
                        new { Id = 1, Identifier = "tajnagrupa", Name = "Plan lekcji", creatorId = 1, modifyTime = new DateTime(2019, 3, 4, 21, 6, 35, 717, DateTimeKind.Local) }
                    );
                });

            modelBuilder.Entity("SignInAppSrv.Models.GroupMembership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GroupId");

                    b.Property<int>("UserId");

                    b.Property<string>("userIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("GroupMemberships");

                    b.HasData(
                        new { Id = 1, GroupId = 1, UserId = 1, userIdentifier = "Grzegorz Cieplechowicz" },
                        new { Id = 2, GroupId = 1, UserId = 2, userIdentifier = "Anna Cieplechowicz" },
                        new { Id = 3, GroupId = 1, UserId = 3, userIdentifier = "Jan Cieplechowicz" }
                    );
                });

            modelBuilder.Entity("SignInAppSrv.Models.UserSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Start");

                    b.Property<string>("Token");

                    b.Property<int>("UserID");

                    b.HasKey("Id");

                    b.ToTable("UserSessions");
                });

            modelBuilder.Entity("WebApp.Models.Day", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Days");

                    b.HasData(
                        new { Id = 1, Name = "Monday" },
                        new { Id = 2, Name = "Tuesday" },
                        new { Id = 3, Name = "Wednesday" },
                        new { Id = 4, Name = "Thursday" },
                        new { Id = 5, Name = "Friday" },
                        new { Id = 6, Name = "Saturday" },
                        new { Id = 7, Name = "Sunday" }
                    );
                });

            modelBuilder.Entity("WebApp.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Username");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new { UserId = 1, Email = "gcieplechowicz@gmail.com", FirstName = "Grzegorz", LastName = "Cieplechowicz", Password = "atomics1", PhoneNumber = "573248012", Username = "gcieplechowicz" },
                        new { UserId = 2, Email = "gcieplechowicz2@gmail.com", FirstName = "Anna", LastName = "Cieplechowicz", Password = "atomics1", PhoneNumber = "573248012", Username = "acieplechowicz" },
                        new { UserId = 3, Email = "gcieplechowicz3@gmail.com", FirstName = "Jan", LastName = "Cieplechowicz", Password = "atomics1", PhoneNumber = "573248012", Username = "jcieplechowicz" }
                    );
                });

            modelBuilder.Entity("SignInAppSrv.Models.Assignment", b =>
                {
                    b.HasOne("WebApp.Models.Day", "Day")
                        .WithMany("Assignments")
                        .HasForeignKey("DayId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SignInAppSrv.Models.GroupMembership", b =>
                {
                    b.HasOne("SignInAppSrv.Models.Group", "Group")
                        .WithMany("groupMemberships")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApp.Models.User", "User")
                        .WithMany("groupMemberships")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
